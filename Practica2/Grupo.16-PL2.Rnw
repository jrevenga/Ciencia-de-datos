\documentclass[a4paper, 12pt]{article}
\usepackage[spanish]{babel}
\usepackage[hmargin=2.5cm,vmargin=2.5cm]{geometry}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{fancyhdr}

\setlength{\arrayrulewidth}{0.4mm}

\newcommand{\HRule}{\rule{\linewidth}{0.5mm}}

\begin{document}
\SweaveOpts{concordance=TRUE}
	\begin{titlepage}
		\begin{center}
			\includegraphics[width=0.5\textwidth]{logoUAH.png}~\\[2cm]
			
			\textsc{\Large \\Fundamentos de la Ciencia de Datos}\\[2cm]
			
			\HRule \\[0.4cm]
			{\LARGE \bfseries Prueba de Laboratorio 2 (PL2) \\[0.4cm]}
			\HRule \\[2cm]
			
			\large\textbf{Jorge Revenga Martín de Vidales}\\
			\large\textbf{Ángel Salgado Aldao}\\
			\large\textbf{Adrián García}\\
			\large\textbf{}\\ Grado en Ingeniería Informática \\ Universidad de Alcalá
			
			\vfill
			
			{\large \today}
		\end{center}
	\end{titlepage}
	% Configura los encabezados y pies de página
	\pagestyle{fancy}
	\fancyhf{} % Limpia todos los encabezados y pies de página actuales
	% Encabezado
	\fancyhead[RO,LE]{\textit{Fundamentos de la ciencia de datos}}
	\fancyhead[LO,RE]{\textit{Prueba de Laboratorio 2 (PL2)}}
	% Pie de página
	\fancyfoot[LO,RE]{\textit{Universidad de Alcalá}}
	\fancyfoot[RO,LE]{\thepage}  % Número de página en la esquina inferior derecha
	\newpage
	
	\thispagestyle{plain}
	\tableofcontents
	
	
	\newpage
	
	\section{Introducción - Consideraciones previas}
	
	\subsection{Uso de RStudio}
	Para utilizar una función en R se escribe el nombre de la función, seguido de los parámetros de entrada entre paréntesis e.g.: \texttt{función(parámetros)}
	
	\begin{itemize}
		\item[-]Función \texttt{contributors()}: Muestra los creadores del programa (R)
		
		\item[-]Función \texttt{help()}: Abre un HTML con información sobre la función \texttt{help()} o de la función entre paréntesis de haberla. Para todas las funciones que programemos (para todas las que existan) en R debe poder usarse la función \texttt{help()}.
		
		En el archivo HTML se distinguen varios elementos:
		
		\begin{itemize}
			\item función \{paquete\}: la función de la que se obtiene información seguida del paquete al que pertenece.
			\item Description: descripción de la función.
			\item Usage: aparece la función y todos los argumentos que se le pueden introducir.
			\item Arguments: Explicación de los argumentos o parámetros.
			\item Details: Detalles adicionales de la función.
			\item Offline help: Ayuda sin conexión.
			\item Note: Nota del autor.
			\item References: Referencias.
			\item Examples: Ejemplos de uso de la función.
		\end{itemize}
		
		\item[-]Función \texttt{getwd()} se utiliza para obtener el directorio de trabajo actual (working directory).
		
		\item[-]Función \texttt{setwd(\string"C:/…")} permite cambiar el nuevo directorio de trabajo en el que queramos trabajar.
		
		\item[-] \texttt{help.start()}: Manda a un compendio de todas las ayudas disponibles para trabajar con R.
		
		\item[-]Función \texttt{list.files()}: Muestra todos los archivos en el directorio. \texttt{dir()} hace lo mismo. 
	\end{itemize}
	
	\subsection{Introducción de datos de Excel/CSV en R}
	Para poder leer archivos .xlsx y .csv seguimos un par de pasos:

	\begin{itemize}
		\item[-] Archivos .csv:
		\begin{itemize}
			\item Primero se crea el archivo .csv y se introducen los datos por filas (los datos de la fila i, se escriben en la celda (i,1)) y separando dichos datos con un delimitador ('',´´ o '';´´).
			\item Después se usa la función \texttt{read.csv(''ruta del archivo´´, sep = '';´´)}, la cual es parte del paquete base de R, para leer los datos del archivo. Recibe como parámetros la ruta del archivo y el delimitador que usa para separar los datos.
		\end{itemize}
		
		\item[-] Archivos .xlsx:
		\begin{itemize}
			\item Primero se crea el archivo .xlsc y se introducen los datos en forma de matriz, escribiendo cada dato en una celda.
			\item Después se carga la librería \emph{openxlsx} y se usa la función \texttt{read\_excel(''ruta del archivo´´)}, introduciendo la ruta del archivo por parámetro.
		\end{itemize}
	\end{itemize}
	
	
  \newpage
	
	\section{Ejercicios con ayuda del profesor}
	Realización de cuatro ejercicios con ayuda del profesor en los que se van a realizar, utilizando el entorno R, dos análisis de clasificación no supervisada y dos análisis de clasificación supervisada, aplicando todos los conceptos teóricos vistos en cada lección.

	\subsection{Análisis de clasificación no supervisada}
	
	\subsubsection{k-Means}
	
	El primer conjunto de datos, que se empleará para realizar el análisis de clasificación no supervisada con k-Means, estará formado por las siguientes 8 calificaciones de estudiantes: 1.\{4, 4\}; 2.\{3, 5\}; 3.\{1, 2\}; 4.\{5, 5\}; 5.\{0, 1\}; 6.\{2, 2\}; 7.\{4, 5\}; 8.\{2, 1\}, donde las características de las calificaciones son: \{Teoría, Laboratorio\}.
	
	\paragraph{Solución:}
	\begin{itemize}
		\item \texttt{m<-matrix(c(4,4, 3,5, 1,2, 5,5, 0,1, 2,2, 4,5, 2,1),2,8)}: 
		Introducción de los datos
<<>>=
m<-matrix(c(4,4, 3,5, 1,2, 5,5, 0,1, 2,2, 4,5, 2,1),2,8)
(m<-t(m))
@
		\item \texttt{c<-matrix(c(0,1,2,2),2,2)}: 
		La función de k-means viene en los paquetes por defecto, toma la matriz y los centroides iniciales, este código crea los centriodes
<<>>=
c<-matrix(c(0,1,2,2),2,2)
(c<-t(c))
@
		\item \texttt{(clasificacionns=(kmeans(m,c,4)))}: 
		Almacena el resultado en la variable clasificacionns(no supervisada)
<<>>=
(clasificacionns=(kmeans(m,c,4)))
@
		\item \texttt{}: 
		Extraemos el vector de la solución de kmeans  (usando el dolar obtenemos la variable cluster) y se la añadimos a la matriz
<<>>=
(m=cbind(clasificacionns$cluster,m))
@
		\item \texttt{}: 
		Separa la matriz por clusters
<<>>=
mc1=subset(m,m[,1]==1)
mc2=subset(m,m[,1]==2)
mc1
mc2
@
		\item \texttt{}: 
		Quitamos la primera columna de ambas ya que sólo indica el cluster
<<>>=
(mc1=mc1[,-1])
(mc2=mc2[,-1])
@
		\item \texttt{}: 
		Finalmente, vemos los datos separados en tablas por el cluster al que pertenecen.

	\end{itemize}
	
	\newpage
	
	\subsubsection{Clusterización Jerárquica Aglomerativa}
	
	El segundo conjunto de datos, que se empleará para realizar el análisis de clasificación no supervisada con Clusterización Jerárquica Aglomerativa, estará formado por 6 calificaciones de estudiantes: 1.\{0.89, 2.94\}; 2.\{4.36, 5.21\}; 3.\{3.75, 1.12\}; 4.\{6.25, 3.14\}; 5.\{4.1, 1.8\}; 6.\{3.9, 4.27\}.
	
	\paragraph{Solución}

	\begin{itemize}
<<>>=
install.packages("LearnClust")
library(LearnClust)
search()
@
		\item \texttt{}: 
		Explicacion
<<>>=
m<-matrix(c(0.89,2.94, 4.36,5.21, 3.75,1.12, 6.25,3.14, 4.1,1.8, 3.9,4.27),2,6)
(m<-t(m))
@
		\item \texttt{}: 
		Explicacion
<<>>=
agglomerativeHC(m,'EUC','MIN')
@
		\item \texttt{}: 
		Explicacion
<<>>=
agglomerativeHC.details(m,'EUC','MIN')
@
		\item \texttt{}: 
		Explicacion
<<>>=
agglomerativeHC.details(m,'EUC','MAX')
@
		\item \texttt{}: 
		Explicacion
<<>>=

@

	\end{itemize}

	\newpage

	\subsection{Análisis de clasificación supervisada}
	
	\subsubsection{Árboles de decisión}
	
	El tercer conjunto de datos, que se empleará para realizar el análisis de clasificación supervisada utilizando árboles de decisión, estará formado por las siguientes 9 calificaciones de estudiantes: 1.\{A,A,B,Ap\}; 2.\{A,B,D,Ss\}; 3.\{D,D,C,Ss\}; 4.\{D,D,A,Ss\}; 5.\{B,C,B,Ss\}; 6.\{C,B,B,Ap\}; 7.\{B,B,A,Ap\}; 8.\{C,D,C,Ss\}; 9.\{B,A,C,Ss\}, donde las características de las calificaciones son: \{Teoría, Laboratorio, Prácticas, Calificación Global).

	\paragraph{Solución:}
	\begin{itemize}
	  \item Primero creamos un txt con los datos del problema en cuestión, para después mediante el uso del paquete ''rpart´´ realizar la clasificación.
<<>>=
install.packages("rpart")
library("rpart")
(muestra=read.table("calificaciones.txt"))
@

    	  \item Acto seguido hacemos uso de la función que viene incluida en el paquete llamada \texttt{rpart()}, la cual recibe la variable dependiente \texttt{C.G} y las variables predictoras \texttt{T,L,P}, el conjunto de datos sobre el que realiza la clasificación \texttt{data=muestra}, con \texttt{method=class} indica que se está ajustando un modelo de clasificación y el número mínimo de observaciones \texttt{minsplit=1}.
<<>>=
clasificacion=rpart(C.G~T+L+P, data=muestra, method="class", minsplit=1)
@

    	  \item Esta función hace la clasificación pertinente y devuelve en forma de árbol la solución con los diferentes nodos, además indica que nodos representan un nodo final usando el símbolo ''*´´.
    
  	\end{itemize}
	
	\subsubsection{Regresión}
	
	El cuarto conjunto de datos, que se empleará para realizar el análisis de clasificación supervisada utilizando regresión, estará formado por los siguientes 4 radios ecuatoriales y densidades de los planetas interiores: \{Mercurio,2.4,5.4; Venus,6.1,5.2; Tierra,6.4,5.5; Marte,3.4,3.9\}
	
	\paragraph{Solución:}
	\begin{itemize}
	  \item El primer paso es crear un txt con los datos necesarios, para después hacer uso de él en el análisis de regresión
<<>>=
(muestra=read.table("planetas.txt"))
@
	
	  \item Después usando la función \texttt{lm()}, se calcula la regresión indicando la relación entre la variable dependiente \texttt{D} y la variable independiente{R} y el conjunto de datos en el que se encuentran dichas variables \texttt{data=muestra}.
<<>>=
regresion=lm(D~R, data=muestra)  
@

    	  \item Además de esto, gracias a la función \texttt{summary()}, podemos obtener el valor de R-squared y observar la bonanza de la regresión.
<<>>=
summary(regresion)
@

    	  \item Otro uso que podemos hacer de la función \texttt{summary()}, es analizar los outliers de la siguiente forma. En la cual obtenemos los residuos, para después hacer la media de los mismos y con un bucle for comprobar cual de todos ellos es un outlier en caso de que los hubiese.
<<>>=
(res=summary(regresion)$residuals)
sr=sqrt(sum(res^2)/4)
for (i in 1:length(res)){if (res[i]>3*sr){print("el suceso"); print(res[i]); print("es un suceso anómalo")}}
@
  	\end{itemize}
	
	\newpage
	
	\section{Ejercicios de forma autónoma}
	
	Realización de cuatro ejercicios de forma autónoma por cada grupo de estudiantes en los que se van a realizar, utilizando el entorno R, dos análisis de clasificación no supervisada y dos análisis de clasificación supervisada, aplicando todos los conceptos teóricos vistos en cada lección.
	
	\subsection{Análisis de clasificación no supervisada}
	
	\subsubsection{K-means}
	
	El primer conjunto de datos, que se empleará para realizar el análisis de clasificación no supervisada con K-means, estará formado por los siguientes 15 valores de velocidades de respuesta y temperaturas normalizadas de un microprocesador \{Velocidad, Temperatura\}: 1.\{3.5, 4.5\}; 2.\{0.75, 3.25\}; 3.\{0, 3\}; 4.\{1.75, 0.75\}; 5.\{3, 3.75\}; 6.\{3.75, 4.5\}; 7.\{1.25, 0.75\}; 8.\{0.25, 3\}; 9.\{3.5, 4.25\}; 10.\{1.5, 0.5\}; 11.\{1, 1\}; 12.\{3, 4\}; 13.\{0.5, 3\}; 14.\{2, 0.25\}; 15.\{0, 2.5\}. Del análisis visual de los datos se ha concluido que hay una alta probabilidad que sean tres clusters.
	
	\paragraph{Solución:}

	\begin{itemize}
		\item \texttt{datos <- read.csv("Datos2.1.csv")}: Se leen los datos del archivo .csv y se guardan en la variable "datos".
		\item \texttt{clasificacionns <- kmedias(datos, num\_clusters = 3, mostrar\_proceso = TRUE)}: Llamar a nuestra función que clasifica con K-means, seleccionando el número de clusters a generar (La función creada genera 2 en caso de no especificarse) y que nos muestre el proceso de clasificación de los clusters.
	
<<>>=
datos <- read.csv("Datos2.1.csv")
clasificacionns <- kmedias(datos, num_clusters = 3, mostrar_proceso = TRUE)

# Añadimos la columna de clusters a los datos originales
m <- cbind(clasificacionns$cluster, datos)

# Separamos la matriz por clusters
mc1 <- subset(m, m[, 1] == 1)
mc2 <- subset(m, m[, 1] == 2)
mc3 <- subset(m, m[, 1] == 3)

# Limpiamos los datos (eliminamos la columna de cluster)
mc1 <- mc1[, -1]
mc2 <- mc2[, -1]
mc3 <- mc3[, -1]


# Datos originales
print(datos)

# Resultado del K-Means
print(m)

# Datos en el cluster 1
print(mc1)

#Datos en el cluster 2
print(mc2)

# Datos en el cluster 3
print(mc3)


@
	\end{itemize}

	\newpage
	\subsubsection{Clusterización Jerárquica Aglomerativa}
	
	El segundo conjunto de datos, que se empleará para realizar el análisis de clasificación no supervisada con Clusterización Jerárquica Aglomerativa, será el mismo que el utilizado en el ejercicio anterior, por lo tanto estará formado por los siguientes 15 valores de velocidades de respuesta y temperaturas normalizadas de un microprocesador \{Velocidad, Temperatura\}: 1.\{3.5, 4.5\}; 2.\{0.75, 3.25\}; 3.\{0, 3\}; 4.\{1.75, 0.75\}; 5.\{3, 3.75\}; 6.\{3.75, 4.5\}; 7.\{1.25, 0.75\}; 8.\{0.25, 3\}; 9.\{3.5, 4.25\}; 10.\{1.5, 0.5\}; 11.\{1, 1\}; 12.\{3, 4\}; 13.\{0.5, 3\}; 14.\{2, 0.25\}; 15.\{0, 2.5\}. Del análisis visual de los datos se ha concluido que hay una alta probabilidad que sean tres clusters.
	
	\paragraph{Solución:}
	\begin{itemize}
		\item \texttt{datos <- read.csv("Datos2.2.csv")}: Se leen los datos del archivo .csv y se guardan en la variable "datos".
		\item \texttt{(datos<-t(datos))}: Se hace la traspuesta de la matriz datos para un mejor tratamiento.
		\item \texttt{(clMin<-agglomerative\_clustering(datos,''single´´,FALSE,FALSE))}: Clusterización usando como definición de proximidad, la distancia entre los puntos más cercanos de los clusters.
		\begin{itemize}
			\item [-] Parámetros:
			\begin{itemize}
				\item \texttt{datos}: Variable que contiene los puntos a evaluar.
				\item \texttt{"single"}: Algoritmo de clusterización, en este caso usando minimum linkage.
				\item \texttt{details="FALSE"}: Booleano para determinar si se imprimen o no los logs con la explicación de todo el proceso.
				\item \texttt{waiting="FALSE"}: Booleano para determinar si tiene que esperar input del usuario para ir imprimiendo los logs.
			\end{itemize}
			\item [-] Salida: Matriz con los clusters y sus distancias.
			\item [-] Explicación: Realiza un análisis jerárquico aglomerativo de los datos introducidos por parámetro. Repite una serie de pasos hasta que solo quede un cluster. Inicialmente cada punto se asigna a su propio cluster y se calcula la matriz de distancias entre ellos. Después se calcula la proximidad entre dos clusters con la distancia entre los 2 puntos más cercanos de dichos clusters (falta formula)
<<>>=
library("clustlearn")
datos <- read.csv("Datos2.2.csv")
(datos<-t(datos))
(clMin<-agglomerative_clustering(datos,"single",FALSE,FALSE))
@
		\end{itemize}
		
		\item \texttt{(clMax<-agglomerative\_clustering(datos,''complete´´,FALSE,FALSE))}: Clusterización usando como definición de proximidad, la distancia que haya entre los dos puntos más lejanos de los clusters.
		\begin{itemize}
			\item [-] Parámetros:
			\begin{itemize}
				\item \texttt{datos}: Variable que contiene los puntos a evaluar.
				\item \texttt{"single"}: Algoritmo de clusterización, en este caso usando maximum linkage.
				\item \texttt{details="FALSE"}: Booleano para determinar si se imprimen o no los logs con la explicación de todo el proceso.
				\item \texttt{waiting="FALSE"}: Booleano para determinar si tiene que esperar input del usuario para ir imprimiendo los logs.
			\end{itemize}
			\item [-] Salida: Matriz con los clusters y sus distancias.
			\item [-] Explicación: Realiza un análisis jerárquico aglomerativo de los datos introducidos por parámetro. Repite una serie de pasos hasta que solo quede un cluster. Inicialmente cada punto se asigna a su propio cluster y se calcula la matriz de distancias entre ellos. Después se calcula la proximidad entre dos clusters con la distancia entre los puntos más lejanos de dichos clusters (falta formula)
<<>>=
install.packages("clustlearn")
library("clustlearn")
datos <- read.csv("Datos2.2.csv")
(datos<-t(datos))
(clMin<-agglomerative_clustering(datos,"complete",FALSE,FALSE))
@
		\end{itemize}
		
		\item \texttt{(clAvg<-agglomerative\_clustering(datos,''average´´,FALSE,FALSE))}: Clusterización usando como definición de proximidad, la media de distancias entre todas las parejas de puntos de los dos clusters.
		\begin{itemize}
			\item [-] Parámetros:
			\begin{itemize}
				\item \texttt{datos}: Variable que contiene los puntos a evaluar.
				\item \texttt{"average"}: Algoritmo de clusterización, en este caso usando average linkage.
				\item \texttt{details="FALSE"}: Booleano para determinar si se imprimen o no los logs con la explicación de todo el proceso.
				\item \texttt{waiting="FALSE"}: Booleano para determinar si tiene que esperar input del usuario para ir imprimiendo los logs.
			\end{itemize}
			\item [-] Salida: Matriz con los clusters y sus distancias.
			\item [-] Explicación: Realiza un análisis jerárquico aglomerativo de los datos introducidos por parámetro. Repite una serie de pasos hasta que solo quede un cluster. Inicialmente cada punto se asigna a su propio cluster y se calcula la matriz de distancias entre ellos. Después se calcula la proximidad entre dos clusters con la media de todos los puntos de ambos (falta formula)
<<>>=
library("clustlearn")
datos <- read.csv("Datos2.2.csv")
(datos<-t(datos))
(clMin<-agglomerative_clustering(datos,"average",FALSE,FALSE))
@
		\end{itemize}
	\end{itemize}
	
	\subsection{Análisis de clasificación supervisada}
	
	\subsubsection{Árboles de decisión}
	
	El tercer conjunto de datos, que se empleará para realizar el análisis de clasificación supervisada utilizando árboles de decisión, estará formado por el siguiente conjunto de 10 sucesos constituidos por los valores de cuatro características de vehículos: 1.\{B,4,5,Coche\}; 2.\{A,2,2,Moto\}; 3.\{N,2,1,Bicicleta\}; 4.\{B,6,4,Camión\}; 5.\{B,4,6,Coche\}; 6.\{B,4,4,Coche\}; 7.\{N,2,2,Bicicleta\}; 8.\{B,2,1,Moto\}; 9.\{B,6,2,Camión\}; 10.\{N,2,1,Bicicleta\}, donde las características de cada suceso son: \{TipoCarnet, NúmeroRuedas, NúmeroPasajeros, TipoVehículo\}. Se debe clasificar el tipo de vehículo en función del resto de características. TipoCarnet, es el tipo de carnet necesario para conducir el vehículo.
	
	\paragraph{Solución:}
	\begin{itemize}
		\item Primero instalamos la libreria ''readr´´ y se leen los datos del archivo .csv para guardarlos en la variable ''datos´´.
<<>>=
install.packages("readr")
library(readr)
(datos=read.csv('Datos2.3.csv'))
@
		\item Después de importar los datos pasamos los datos que no son tipo Integer, a tipo factor, ya que si no no podremos realizar el análisis correctamente.
<<>>=
TipoCarnet=factor(datos$TipoCarnet)
TipoVehiculo=factor(datos$TipoVehiculo)
@
		\item La variable tipo factor es de tipo categórica usada asiduamente para clasificaciones de datos. Sus valores se almacenan internamente en R como números enteros. Tras al conversión de tipos, creamos un dataframe con las nuevas variables y con las que no han sido cambiadas.
<<>>=
muestra=data.frame(TipoCarnet=TipoCarnet, NumeroRuedas=datos$NumeroRuedas, NumeroPasajeros=datos$NumeroPasajeros, TipoVehiculo=TipoVehiculo)
@
    \item Una vez hecho esto procedemos a instalar el paquete ''tree´´, el cual construye árboles de decisión y haciendo uso de la función \texttt{tree()}. La función tree recibe la variable sobre la que queremos predecir, en este caso \texttt(TipoVehiculo), además de usar ''.´´ para que prediga respecto al resto de variables. También recibe el dataset que hemos creado previamente y del cual obtiene todos los datos. Por último recibe la función para que el árbol se ajuste a los datos en cuestión, \texttt{tree.control()}, que recibe los parámetros el número de observaciones (10), \texttt{minsize=2} y \texttt{mindev=0}.
<<>>=
install.packages("tree")
library(tree)
arbol <- tree(TipoVehiculo ~ ., data=muestra, control=tree.control(10,minsize=2,mindev=0))
@
		\item Para finalizar visualizamos el árbol resultante con \texttt{print()}, muestra las variables de los nodos internos y  los nodos terminales.
<<>>=
print(arbol)
@
		\end{itemize}
	
	\subsubsection{Regresión}
	
	El cuarto conjunto de datos, que se empleará para realizar el análisis de clasificación supervisada utilizando regresión, estará formado por los siguientes 4 subconjuntos de datos: 1.\{10, 8.04; 8, 6.95; 13, 7.58; 9, 8.81; 11, 8.33; 14, 9.96; 6, 7.24; 4, 4.26; 12, 10.84; 7, 4.82; 5, 5.68\}; 2.\{10, 9.14; 8, 8.14; 13, 8.74; 9, 8.77; 11, 9.26; 14, 8.1; 6, 6.13; 4, 3.1; 12, 9.13; 7, 7.26; 5, 4.74\}; 3.\{10, 7.46; 8, 6.77; 13, 12.74; 9, 7.11; 11, 7.81; 14, 8.84; 6, 6.08; 4, 5.39; 12, 8.15; 7, 6.42; 5, 5.73\}; 4.\{8, 6.58; 8, 5.76; 8, 7.71; 8, 8.84; 8, 8.47; 8, 7.04; 8, 5.25; 19, 12.5; 8, 5.56; 8, 7.91; 8, 6.89\}. Se deben calcular las rectas de regresión de los cuatro subconjuntos y sus parámetros de ajuste.
		
	\paragraph{Solución:}
			Algoritmo de minería de reglas de asociación (apriori): Su objetivo principal es descubrir patrones de asociación entre diferentes conjuntos de datos.
			\begin{itemize}
				\item[-] Parámetros:
				\begin{itemize}
					\item \texttt{transacciones}: Lista de sucesos que conforman la muestra.
					\item \texttt{soporte}: Umbral mínimo de soporte que deben superar las asociaciaciones.
					\item \texttt{confianza}: Umbral mínimo de confianza que deben superar las asociaciaciones.
				\end{itemize}
				
				\item[-] Retorno: 
				
				\item[-] Explicación: 

			\end{itemize}
<<>>=

@

  
\end{document}
